apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.sonarqube'


buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/release" }
        maven { url "https://repo.spring.io/libs-milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:${dependencyPlugin}")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${sonarVersion}")
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "http://repo.spring.io/release" }
    maven { url "https://repo.spring.io/libs-milestone" }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    sourceCompatibility = compatibility
    targetCompatibility = compatibility

    tasks.withType(JavaCompile) {
        options.incremental = true
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
            mavenBom("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
        }
    }

    dependencies {
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/release" }
        maven { url "https://repo.spring.io/libs-milestone" }
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "e-Arbiter"
        property "sonar.projectKey", "pl.cyganki:e-Arbiter"
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    version = version
    group = group
}